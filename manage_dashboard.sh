#!/bin/bash

# Script para gerenciar o Dashboard de Precifica√ß√£o
# Uso: ./manage_dashboard.sh [start|stop|restart|status|logs]

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_PATH="$SCRIPT_DIR/.venv"
DASHBOARD_FILE="$SCRIPT_DIR/dashboard_precificacao.py"
LOG_FILE="$SCRIPT_DIR/streamlit.log"
PID_FILE="$SCRIPT_DIR/streamlit.pid"
PORT=8520

case "$1" in
    start)
        echo "üöÄ Iniciando Dashboard de Precifica√ß√£o..."
        cd "$SCRIPT_DIR"
        source "$VENV_PATH/bin/activate"
        
        # Verifica se j√° est√° rodando
        if [ -f "$PID_FILE" ] && ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚ö†Ô∏è  Dashboard j√° est√° rodando na porta $PORT"
            echo "üåê Acesse: http://localhost:$PORT"
            exit 1
        fi
        
        # Inicia o servidor
        nohup streamlit run "$DASHBOARD_FILE" \
            --server.port $PORT \
            --server.headless true \
            --server.runOnSave true \
            --server.address localhost > "$LOG_FILE" 2>&1 &
        
        echo $! > "$PID_FILE"
        sleep 3
        
        if ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚úÖ Dashboard iniciado com sucesso!"
            echo "üåê Acesse: http://localhost:$PORT"
            echo "üìã Logs: tail -f $LOG_FILE"
        else
            echo "‚ùå Erro ao iniciar o dashboard"
            rm -f "$PID_FILE"
            exit 1
        fi
        ;;
        
    stop)
        echo "üõë Parando Dashboard de Precifica√ß√£o..."
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                kill $PID
                rm -f "$PID_FILE"
                echo "‚úÖ Dashboard parado com sucesso"
            else
                echo "‚ö†Ô∏è  Dashboard n√£o estava rodando"
                rm -f "$PID_FILE"
            fi
        else
            echo "‚ö†Ô∏è  Arquivo PID n√£o encontrado"
            # Tenta parar qualquer processo streamlit na porta
            pkill -f "streamlit.*$PORT" && echo "‚úÖ Processos streamlit finalizados"
        fi
        ;;
        
    restart)
        echo "üîÑ Reiniciando Dashboard de Precifica√ß√£o..."
        $0 stop
        sleep 2
        $0 start
        ;;
        
    status)
        if [ -f "$PID_FILE" ] && ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚úÖ Dashboard est√° rodando (PID: $(cat "$PID_FILE"))"
            echo "üåê URL: http://localhost:$PORT"
            echo "üìä Uso de mem√≥ria: $(ps -p $(cat "$PID_FILE") -o rss= | awk '{print $1/1024 " MB"}')"
        else
            echo "‚ùå Dashboard n√£o est√° rodando"
            [ -f "$PID_FILE" ] && rm -f "$PID_FILE"
        fi
        ;;
        
    logs)
        echo "üìã Logs do Dashboard (Ctrl+C para sair):"
        tail -f "$LOG_FILE"
        ;;
        
    *)
        echo "üó∫Ô∏è  Dashboard de Precifica√ß√£o - Munic√≠pios de Alagoas"
        echo ""
        echo "Uso: $0 {start|stop|restart|status|logs}"
        echo ""
        echo "Comandos:"
        echo "  start   - Inicia o dashboard"
        echo "  stop    - Para o dashboard"
        echo "  restart - Reinicia o dashboard"
        echo "  status  - Verifica status do dashboard"
        echo "  logs    - Mostra logs em tempo real"
        echo ""
        echo "Exemplo: $0 start"
        exit 1
        ;;
esac